#ifndef T3FACESCAN_H
#define T3FACESCAN_H
/**
  ******************************************************************************
  * 公司    T3
  * 文件名  T3FaceScan.h
  * 作者    HXP
  * 版本    V1.0.0
  * 日期    2018.04.24
  * 说明    人脸扫描类
  ******************************************************************************
*/

#include <QThread>
#include <QMutex>
#include <QTimer>
#include "../T3base/T3IOBase.hpp"
#include "T3Face.hpp"
#include "../hardware/T3Camera.hpp"
#include "../model/T3FaceRecognInfo.hpp"
#include "../tool/T3VideoDecoder.h"
#include "../config/config.hpp"

namespace interface
{

class T3FaceScan :public QThread
{
  Q_OBJECT
public:
    static T3FaceScan* getInstance();

    ~T3FaceScan();
    /**
     * @brief stopFaceScan 停止人脸识别扫描
     */
    void stopFaceScan();

signals:
    /**
   * @brief getNewFace  当检测到人脸出现的时候,发出次信号,当画面中出现多张人脸的时候,发出的人脸信息时面积最大得一个
   * @param userInfo    探测到得人脸信息
   */
  void getNewFace(model::T3UserInfo &userInfo);

  /**
   * @brief noFaceSign  当画面中没有人一定时间之后发出此信号
   */
  void noFaceSign();

private:
    static T3FaceScan* _faceScan;

    /**
     * @brief startFaceScan 开始进行人脸识别扫描
     * @return
     */
    bool startFaceScan();


    T3Face                        *_face;
    T3Camera                      *_camera;
    QByteArray                    _YUYVFrameData;
    tool::T3VideoDecoder          *_videoDecoder;
    model::T3FaceRecognInfo       *_faceRecognInfo;
    model::T3FaceRecognInfo       *_oldFaceRecognInfo;
    bool                          _faceScanBeReady;
    QMutex                        _lock;
    bool                          _isCanRun;
    int                           _frameIndex;
    bool                          _faceChange;
    QTimer                        *_noFaceTimer;


    void run();

    T3FaceScan();


    void initInstance();

    bool checkFaceBeChange();

    int computeOverlapArea(int leftA,
                       int bottomA,
                       int rightA,
                       int topA,
                       int leftB,
                       int bottomB,
                       int rightB,
                       int topB);



private slots:
    void newFaceSlots(model::T3UserInfo &userInfo);

    void noFaceSlot();



};
}
#endif // T3FACESCAN_H
